!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(t,n,r){"use strict";r.r(n);var o=document.querySelector(".profile__info-edit"),i=document.querySelector(".popup__form"),u=document.querySelector(".elements"),a=document.querySelector(".profile__add-button"),s=i.querySelector(".popup__input_name"),l=i.querySelector(".popup__input_job"),c={formSelector:".popup__form",formEdit:"#js-edit",formCreate:"#js-create",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_inactive",inputErrorClass:".popup__input_error",inputInvalid:"popup__input_invalid",errorClass:"popup__input_error_active"};function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._template=n,this._handleCardClick=r}var t,n,r;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._template).content.cloneNode(!0).children[0]}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".element__photo").src=this._link,this._element.querySelector(".element__photo").alt=this._name,this._element.querySelector(".element__heading").textContent=this._name,this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__like").addEventListener("click",(function(){e._like()})),this._element.querySelector(".element__delete").addEventListener("click",(function(){e._deleteCard()})),this._element.querySelector(".element__photo").addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"_like",value:function(){this._element.querySelector(".element__like").classList.toggle("element__like_state_active")}},{key:"_deleteCard",value:function(){this._element.remove(),this._element=null}}])&&p(t.prototype,n),r&&p(t,r),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=n.formSelector,this._formElement=document.querySelector(t),this._inputSelector=n.inputSelector,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButtonSelector=n.submitButtonSelector,this._submit=this._formElement.querySelector(this._submitButtonSelector),this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._inputInvalid=n.inputInvalid,this._errorClass=n.errorClass}var t,n,r;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){if(e.validity.valid)this._hideInputError(e),e.classList.remove(this._inputInvalid);else{var t=e.validationMessage;e.classList.add(this._inputInvalid),this._showInputError(e,t)}}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submit.classList.add(this._inactiveButtonClass),this._submit.setAttribute("disabled",!0)):(this._submit.classList.remove(this._inactiveButtonClass),this._submit.removeAttribute("disabled"))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"clearValidation",value:function(){var e=this;this._toggleButtonState(),this._hasInvalidInput()&&(this._formElement.querySelector(this._inputErrorClass).textContent=""),this._inputList.forEach((function(t){t.classList.remove(e._inputInvalid)})),Array.from(this._formElement.querySelectorAll(this._inputErrorClass)).forEach((function(t){t.classList.remove(e._errorClass)}))}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&_(t.prototype,n),r&&_(t,r),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}var n,r,o;return n=t,(r=[{key:"openPopup",value:function(){this._popup.classList.add("popup_is-opened"),this._handleEscClose(e)}},{key:"closePopup",value:function(){this._popup.classList.remove("popup_is-opened"),document.removeEventListener("keyup",this._handleEscClose.bind(this))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.closePopup()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){e.closePopup()})),this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.closePopup()}))}}])&&d(n.prototype,r),o&&d(n,o),t}();function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return(b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=E(e);if(t){var o=E(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return k(this,n)}}function k(e,t){return!t||"object"!==y(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(i,e);var t,n,r,o=S(i);function i(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),(n=o.call(this,e))._popupSelector=document.querySelector(e),n._formSubmit=t,n._form=n._popupSelector.querySelector(".popup__form"),n._inputList=n._popup.querySelectorAll(".popup__input"),n}return t=i,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputObj={},this._inputList.forEach((function(t){e._inputObj[t.name]=t.value})),this._inputObj}},{key:"closePopup",value:function(){b(E(i.prototype),"closePopup",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;b(E(i.prototype),"setEventListeners",this).call(this),this._popupSelector.addEventListener("submit",(function(t){t.preventDefault(),e._formSubmit(e._getInputValues()),e.closePopup()}))}}])&&v(t.prototype,n),r&&v(t,r),i}(m);function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(e,t,n){return(O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function P(e,t){return(P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function L(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=I(e);if(t){var o=I(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return q(this,n)}}function q(e,t){return!t||"object"!==C(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function I(e){return(I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&P(e,t)}(i,e);var t,n,r,o=L(i);function i(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),(n=o.call(this,e))._title=document.querySelector(t.title),n._image=document.querySelector(t.image),n}return t=i,(n=[{key:"openPopup",value:function(e,t){O(I(i.prototype),"openPopup",this).call(this),this._title.textContent=e,this._image.alt=e,this._image.src=t}}])&&w(t.prototype,n),r&&w(t,r),i}(m);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._containerSelector=n}var t,n,r;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._containerSelector.append(e)}}])&&R(t.prototype,n),r&&R(t,r),e}();function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var V=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t.name),this._job=document.querySelector(t.job)}var t,n,r;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._job.textContent=e.job}}])&&B(t.prototype,n),r&&B(t,r),e}(),D=new x("#js-image",{title:".popup__title_content-heading",image:".popup__image"});D.setEventListeners();var A=new T({items:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:function(e){var t=new f(e,".element-template",D.openPopup.bind(D)).generateCard();A.addItem(t)}},u);A.renderItems();var M=new V({name:".profile__info-name",job:".profile__info-job"}),U=new j("#js-edit",(function(e){M.setUserInfo(e)}));U.setEventListeners();var z=new j("#js-create",(function(e){var t=new f(e,".element-template",D.openPopup.bind(D)).generateCard();u.prepend(t)}));z.setEventListeners(),a.addEventListener("click",(function(){z.openPopup(),F.clearValidation()})),o.addEventListener("click",(function(){U.openPopup();var e=M.getUserInfo();s.value=e.name,l.value=e.job,N.clearValidation()}));var N=new h(c.formEdit,c);N.enableValidation();var F=new h(c.formCreate,c);F.enableValidation()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovLy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvY2FyZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL2Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9wb3B1cC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL3BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9wb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL3NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy91c2VySW5mby5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInBvcHVwT3BlbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImZvcm1FbGVtZW50IiwiY2FyZEVsZW1lbnRzIiwiYWRkQnV0dG9uIiwibmFtZUlucHV0Iiwiam9iSW5wdXQiLCJjb25maWciLCJmb3JtU2VsZWN0b3IiLCJmb3JtRWRpdCIsImZvcm1DcmVhdGUiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRJbnZhbGlkIiwiZXJyb3JDbGFzcyIsIkNhcmQiLCJvcHRpb25zIiwidGVtcGxhdGUiLCJoYW5kbGVDYXJkQ2xpY2siLCJ0aGlzIiwiX25hbWUiLCJfbGluayIsImxpbmsiLCJfdGVtcGxhdGUiLCJfaGFuZGxlQ2FyZENsaWNrIiwiY29udGVudCIsImNsb25lTm9kZSIsImNoaWxkcmVuIiwiX2VsZW1lbnQiLCJfZ2V0VGVtcGxhdGUiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJzcmMiLCJhbHQiLCJ0ZXh0Q29udGVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfbGlrZSIsIl9kZWxldGVDYXJkIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwicmVtb3ZlIiwiRm9ybVZhbGlkYXRvciIsIl9mb3JtU2VsZWN0b3IiLCJfZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX3N1Ym1pdCIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsIl9pbnB1dEludmFsaWQiLCJfZXJyb3JDbGFzcyIsImlucHV0SXRlbSIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwiYWRkIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiX3Nob3dJbnB1dEVycm9yIiwiX2hhc0ludmFsaWRJbnB1dCIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsInNvbWUiLCJpbnB1dEVsZW1lbnQiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJmb3JFYWNoIiwiZXJyb3JJdGVtIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsImUiLCJwcmV2ZW50RGVmYXVsdCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsIl9oYW5kbGVFc2NDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjbG9zZVBvcHVwIiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsIlBvcHVwV2l0aEZvcm0iLCJmb3JtU3VibWl0IiwiX3BvcHVwU2VsZWN0b3IiLCJfZm9ybVN1Ym1pdCIsIl9mb3JtIiwiX2lucHV0T2JqIiwiaXRlbSIsInJlc2V0IiwiX2dldElucHV0VmFsdWVzIiwiUG9wdXBXaXRoSW1hZ2UiLCJkYXRhIiwiX3RpdGxlIiwidGl0bGUiLCJfaW1hZ2UiLCJpbWFnZSIsIlNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyU2VsZWN0b3IiLCJlbGVtZW50IiwiYXBwZW5kIiwiVXNlckluZm8iLCJfam9iIiwiam9iIiwicG9wdXBXaXRoSW1nIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJpbml0aWFsR2FsbGVyeSIsImNhcmRFbGVtZW50Iiwib3BlblBvcHVwIiwiZ2VuZXJhdGVDYXJkIiwiYWRkSXRlbSIsInJlbmRlckl0ZW1zIiwiZ2V0SW5mbyIsImVkaXRQb3B1cCIsInNldFVzZXJJbmZvIiwiY3JlYXRlUG9wdXAiLCJwcmVwZW5kIiwiZm9ybUNyZWF0ZVZhbGlkYXRvciIsImNsZWFyVmFsaWRhdGlvbiIsInVzZXJEYXRhIiwiZ2V0VXNlckluZm8iLCJmb3JtRWRpdFZhbGlkYXRvciIsImVuYWJsZVZhbGlkYXRpb24iXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxF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RUFBc0IsSUFBSW5GLEVBQWNuQyxFQUFPRyxXQUFZSCxHQUNqRXNILEVBQW9CSyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6ICfQkNGA0YXRi9C3JyxcclxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQvYXJraHl6LmpwZycsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiAn0KfQtdC70Y/QsdC40L3RgdC60LDRjyDQvtCx0LvQsNGB0YLRjCcsXHJcbiAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2NoZWx5YWJpbnNrLW9ibGFzdC5qcGcnLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogJ9CY0LLQsNC90L7QstC+JyxcclxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQvaXZhbm92by5qcGcnLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogJ9Ca0LDQvNGH0LDRgtC60LAnLFxyXG4gICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9rYW1jaGF0a2EuanBnJyxcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICfQpdC+0LvQvNC+0LPQvtGA0YHQutC40Lkg0YDQsNC50L7QvScsXHJcbiAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2tob2xtb2dvcnNreS1yYXlvbi5qcGcnLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogJ9CR0LDQudC60LDQuycsXHJcbiAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2JhaWthbC5qcGcnLFxyXG4gIH1cclxuXTtcclxuY29uc3QgcG9wdXBPcGVuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2luZm8tZWRpdCcpO1xyXG5jb25zdCBmb3JtRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xyXG5jb25zdCBjYXJkRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHMnKTtcclxuY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idXR0b24nKTtcclxuY29uc3QgbmFtZUlucHV0ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF9uYW1lJyk7XHJcbmNvbnN0IGpvYklucHV0ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF9qb2InKTtcclxuY29uc3QgY29uZmlnID0ge1xyXG4gIGZvcm1TZWxlY3RvcjogJy5wb3B1cF9fZm9ybScsXHJcbiAgZm9ybUVkaXQ6ICcjanMtZWRpdCcsXHJcbiAgZm9ybUNyZWF0ZTogJyNqcy1jcmVhdGUnLFxyXG4gIGlucHV0U2VsZWN0b3I6ICcucG9wdXBfX2lucHV0JyxcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fc3VibWl0JyxcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX3N1Ym1pdF9pbmFjdGl2ZScsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiAnLnBvcHVwX19pbnB1dF9lcnJvcicsXHJcbiAgaW5wdXRJbnZhbGlkOiAncG9wdXBfX2lucHV0X2ludmFsaWQnLFxyXG4gIGVycm9yQ2xhc3M6ICdwb3B1cF9faW5wdXRfZXJyb3JfYWN0aXZlJ1xyXG59XHJcbmNvbnN0IHBvcHVwSW1hZ2VXaXRoQ29uZmlnID0ge1xyXG4gIHRpdGxlOiAnLnBvcHVwX190aXRsZV9jb250ZW50LWhlYWRpbmcnLFxyXG4gIGltYWdlOiAnLnBvcHVwX19pbWFnZScsXHJcbn1cclxuY29uc3QgdXNlckRhdGEgPSB7XHJcbiAgbmFtZTogJy5wcm9maWxlX19pbmZvLW5hbWUnLFxyXG4gIGpvYjogJy5wcm9maWxlX19pbmZvLWpvYicsXHJcbn1cclxuXHJcbmV4cG9ydCB7IGluaXRpYWxDYXJkcywgcG9wdXBPcGVuLCBmb3JtRWxlbWVudCwgY2FyZEVsZW1lbnRzLCBhZGRCdXR0b24sIG5hbWVJbnB1dCwgam9iSW5wdXQsIGNvbmZpZywgcG9wdXBJbWFnZVdpdGhDb25maWcsIHVzZXJEYXRhIH0iLCJleHBvcnQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucywgdGVtcGxhdGUsIGhhbmRsZUNhcmRDbGljaykge1xyXG4gICAgdGhpcy5fbmFtZSA9IG9wdGlvbnMubmFtZSxcclxuICAgICAgdGhpcy5fbGluayA9IG9wdGlvbnMubGluayxcclxuICAgICAgdGhpcy5fdGVtcGxhdGUgPSB0ZW1wbGF0ZSxcclxuICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrXHJcbiAgfVxyXG5cclxuICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZSkuY29udGVudC5jbG9uZU5vZGUodHJ1ZSkuY2hpbGRyZW5bMF07XHJcbiAgfVxyXG5cclxuICBnZW5lcmF0ZUNhcmQoKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fcGhvdG8nKS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fcGhvdG8nKS5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faGVhZGluZycpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudFxyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9saWtlKCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2RlbGV0ZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9kZWxldGVDYXJkKCk7XHJcbiAgICB9KVxyXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fcGhvdG8nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIF9saWtlKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZScpLmNsYXNzTGlzdC50b2dnbGUoJ2VsZW1lbnRfX2xpa2Vfc3RhdGVfYWN0aXZlJyk7XHJcbiAgfVxyXG5cclxuICBfZGVsZXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcclxuICB9XHJcbn1cclxuXHJcbiIsImV4cG9ydCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihmb3JtU2VsZWN0b3IsIGNvbmZpZykge1xyXG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gY29uZmlnLmZvcm1TZWxlY3RvcjtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihmb3JtU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGNvbmZpZy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5fc3VibWl0ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBjb25maWcuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgdGhpcy5faW5wdXRJbnZhbGlkID0gY29uZmlnLmlucHV0SW52YWxpZDtcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBjb25maWcuZXJyb3JDbGFzcztcclxuICB9XHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0SXRlbSwgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEl0ZW0uaWR9LWVycm9yYCk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9O1xyXG5cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRJdGVtKSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEl0ZW0uaWR9LWVycm9yYCk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH07XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRJdGVtKSB7XHJcbiAgICBjb25zdCBpc0lucHV0Tm90VmFsaWQgPSAhaW5wdXRJdGVtLnZhbGlkaXR5LnZhbGlkO1xyXG4gICAgaWYgKGlzSW5wdXROb3RWYWxpZCkge1xyXG4gICAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBpbnB1dEl0ZW0udmFsaWRhdGlvbk1lc3NhZ2VcclxuICAgICAgaW5wdXRJdGVtLmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRJbnZhbGlkKTtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRJdGVtLCBlcnJvck1lc3NhZ2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRJdGVtKTtcclxuICAgICAgaW5wdXRJdGVtLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRJbnZhbGlkKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICB0aGlzLl9zdWJtaXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fc3VibWl0LnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9zdWJtaXQucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcclxuICAgIGNvbnN0IGhhc0ludmFsaWRJbnB1dCA9IHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+ICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpO1xyXG4gICAgcmV0dXJuIGhhc0ludmFsaWRJbnB1dDtcclxuICB9XHJcblxyXG4gIGNsZWFyVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKClcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2lucHV0RXJyb3JDbGFzcykudGV4dENvbnRlbnQgPSAnJztcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRJdGVtKSA9PiB7XHJcbiAgICAgIGlucHV0SXRlbS5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0SW52YWxpZCk7XHJcblxyXG4gICAgfSlcclxuICAgIGNvbnN0IGVycm9yTGlzdCA9IEFycmF5LmZyb20odGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpKTtcclxuICAgIGVycm9yTGlzdC5mb3JFYWNoKChlcnJvckl0ZW0pID0+IHtcclxuICAgICAgZXJyb3JJdGVtLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0SXRlbSkgPT4ge1xyXG4gICAgICBpbnB1dEl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0SXRlbSk7XHJcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICB9KVxyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKVxyXG4gIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XHJcbiAgfVxyXG5cclxuICBvcGVuUG9wdXAoKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9pcy1vcGVuZWQnKTtcclxuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKGUpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2VQb3B1cCgpIHtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX2lzLW9wZW5lZCcpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVFc2NDbG9zZShlKSB7XHJcbiAgICBpZiAoZS5rZXkgPT09ICdFc2NhcGUnKSB7XHJcbiAgICAgIHRoaXMuY2xvc2VQb3B1cCgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Nsb3NlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuY2xvc2VQb3B1cCgpO1xyXG4gICAgfSlcclxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgICAgaWYgKGUudGFyZ2V0ICE9PSBlLmN1cnJlbnRUYXJnZXQpIHtcclxuICAgICAgICByZXR1cm5cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLmNsb3NlUG9wdXAoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tICcuL3BvcHVwLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgZm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2Zvcm1TdWJtaXQgPSBmb3JtU3VibWl0O1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0Jyk7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICB0aGlzLl9pbnB1dE9iaiA9IHt9O1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgdGhpcy5faW5wdXRPYmpbaXRlbS5uYW1lXSA9IGl0ZW0udmFsdWU7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiB0aGlzLl9pbnB1dE9iajtcclxuICB9XHJcblxyXG4gIGNsb3NlUG9wdXAoKSB7XHJcbiAgICBzdXBlci5jbG9zZVBvcHVwKCk7XHJcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChlKSA9PiB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5fZm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgdGhpcy5jbG9zZVBvcHVwKCk7XHJcbiAgICB9KVxyXG4gIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tICcuLi9jb21wb25lbnRzL3BvcHVwLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGRhdGEpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGRhdGEudGl0bGUpO1xyXG4gICAgdGhpcy5faW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGRhdGEuaW1hZ2UpO1xyXG4gIH1cclxuXHJcbiAgb3BlblBvcHVwKHRpdGxlLCBpbWFnZSkge1xyXG4gICAgc3VwZXIub3BlblBvcHVwKCk7XHJcblxyXG4gICAgdGhpcy5fdGl0bGUudGV4dENvbnRlbnQgPSB0aXRsZTtcclxuICAgIHRoaXMuX2ltYWdlLmFsdCA9IHRpdGxlO1xyXG4gICAgdGhpcy5faW1hZ2Uuc3JjID0gaW1hZ2U7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyU2VsZWN0b3IgPSBjb250YWluZXJTZWxlY3RvcjtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyU2VsZWN0b3IuYXBwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3RvcihkYXRhKSB7XHJcbiAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihkYXRhLm5hbWUpO1xyXG4gICAgdGhpcy5fam9iID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihkYXRhLmpvYik7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5hbWU6IHRoaXMuX25hbWUudGV4dENvbnRlbnQsXHJcbiAgICAgIGpvYjogdGhpcy5fam9iLnRleHRDb250ZW50LFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oZGF0YSkge1xyXG4gICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2pvYi50ZXh0Q29udGVudCA9IGRhdGEuam9iO1xyXG4gIH1cclxufSIsImltcG9ydCAnLi4vcGFnZXMvaW5kZXguY3NzJztcclxuaW1wb3J0IHsgcG9wdXBPcGVuLCBpbml0aWFsQ2FyZHMsIGNhcmRFbGVtZW50cywgYWRkQnV0dG9uLCBuYW1lSW5wdXQsIGpvYklucHV0LCBjb25maWcsIHBvcHVwSW1hZ2VXaXRoQ29uZmlnLCB1c2VyRGF0YSB9IGZyb20gJy4vdXRpbHMvY29uc3RhbnRzLmpzJ1xyXG5pbXBvcnQgeyBDYXJkIH0gZnJvbSAnLi9jb21wb25lbnRzL2NhcmQuanMnO1xyXG5pbXBvcnQgeyBGb3JtVmFsaWRhdG9yIH0gZnJvbSAnLi9jb21wb25lbnRzL2Zvcm1WYWxpZGF0b3IuanMnXHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gJy4vY29tcG9uZW50cy9wb3B1cFdpdGhGb3JtLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4vY29tcG9uZW50cy9wb3B1cFdpdGhJbWFnZS5qcyc7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gJy4vY29tcG9uZW50cy9zZWN0aW9uLmpzJztcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gJy4vY29tcG9uZW50cy91c2VySW5mby5qcyc7XHJcblxyXG5jb25zdCBwb3B1cFdpdGhJbWcgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJyNqcy1pbWFnZScsIHBvcHVwSW1hZ2VXaXRoQ29uZmlnKTtcclxucG9wdXBXaXRoSW1nLnNldEV2ZW50TGlzdGVuZXJzKClcclxuY29uc3QgaW5pdGlhbEdhbGxlcnkgPSBuZXcgU2VjdGlvbihcclxuICB7XHJcbiAgICBpdGVtczogaW5pdGlhbENhcmRzLCByZW5kZXJlcjogKGl0ZW0pID0+IHtcclxuICAgICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGl0ZW0sICcuZWxlbWVudC10ZW1wbGF0ZScsIHBvcHVwV2l0aEltZy5vcGVuUG9wdXAuYmluZChwb3B1cFdpdGhJbWcpKTtcclxuICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xyXG4gICAgICBpbml0aWFsR2FsbGVyeS5hZGRJdGVtKGNhcmRFbGVtZW50KTtcclxuICAgIH1cclxuICB9LCBjYXJkRWxlbWVudHNcclxuKVxyXG5cclxuaW5pdGlhbEdhbGxlcnkucmVuZGVySXRlbXMoKTtcclxuXHJcbmNvbnN0IGdldEluZm8gPSBuZXcgVXNlckluZm8odXNlckRhdGEpO1xyXG5cclxuY29uc3QgZWRpdFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oJyNqcy1lZGl0JywgKGRhdGEpID0+IHtcclxuICBnZXRJbmZvLnNldFVzZXJJbmZvKGRhdGEpO1xyXG59KTtcclxuXHJcbmVkaXRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgY3JlYXRlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSgnI2pzLWNyZWF0ZScsIChkYXRhKSA9PiB7XHJcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGRhdGEsICcuZWxlbWVudC10ZW1wbGF0ZScsIHBvcHVwV2l0aEltZy5vcGVuUG9wdXAuYmluZChwb3B1cFdpdGhJbWcpKTtcclxuICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XHJcbiAgY2FyZEVsZW1lbnRzLnByZXBlbmQoY2FyZEVsZW1lbnQpO1xyXG59KTtcclxuXHJcbmNyZWF0ZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5cclxuXHJcbmFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICBjcmVhdGVQb3B1cC5vcGVuUG9wdXAoKTtcclxuICBmb3JtQ3JlYXRlVmFsaWRhdG9yLmNsZWFyVmFsaWRhdGlvbigpO1xyXG59KTtcclxuXHJcbnBvcHVwT3Blbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICBlZGl0UG9wdXAub3BlblBvcHVwKCk7XHJcbiAgY29uc3QgdXNlckRhdGEgPSBnZXRJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgbmFtZUlucHV0LnZhbHVlID0gdXNlckRhdGEubmFtZTtcclxuICBqb2JJbnB1dC52YWx1ZSA9IHVzZXJEYXRhLmpvYjtcclxuICBmb3JtRWRpdFZhbGlkYXRvci5jbGVhclZhbGlkYXRpb24oKTtcclxufSk7XHJcblxyXG5cclxuXHJcbmNvbnN0IGZvcm1FZGl0VmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLmZvcm1FZGl0LCBjb25maWcpO1xyXG5mb3JtRWRpdFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5jb25zdCBmb3JtQ3JlYXRlVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLmZvcm1DcmVhdGUsIGNvbmZpZyk7XHJcbmZvcm1DcmVhdGVWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpOyJdLCJzb3VyY2VSb290IjoiIn0=